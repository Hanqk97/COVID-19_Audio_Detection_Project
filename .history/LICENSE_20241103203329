# COVID-19 Audio Detection System Project

## Goal
Detect COVID-19 from audio data (breathing, cough, and speech) to classify subjects as COVID-positive or COVID-negative.


### 1. Data Preprocessing

1. **Segment Audio Files**
   - **Goal**: Standardize all audio files into 2-3 second segments.
   - **How**: Use `librosa` in Python (`librosa.effects.split`) to split each audio file.
   - **Outcome**: Creates multiple shorter clips from each audio recording.

2. **Denoise Audio**
   - **Goal**: Remove background noise for clearer signals.
   - **How**: Apply spectral gating or a band-pass filter using `scipy.signal`.
   - **Outcome**: Cleaner audio samples that enhance feature quality.

3. **Data Augmentation**
   - **Goal**: Balance dataset by increasing COVID-positive samples.
   - **How**:
     - **Pitch Shift**: Use `librosa.effects.pitch_shift` to vary pitch slightly.
     - **Time Stretch**: Use `librosa.effects.time_stretch` to alter speed.
     - **Noise Injection**: Add light noise to simulate natural variations.
   - **Outcome**: Augmented dataset with more diversity and balance.



### 2. Feature Extraction

1. **Extract Time-Domain Features**
   - **Goal**: Capture time-based characteristics of the audio signals.
   - **Outcome**: Time-domain feature vectors that represent intensity and amplitude variations.

2. **Extract Frequency-Domain Features**
   - **Goal**: Capture spectral characteristics of the audio signals.
   - **Outcome**: Frequency-domain feature vectors that describe pitch and frequency distribution.

3. **Create Spectrograms**
   - **Goal**: Convert audio into visual representations suitable for deep learning.
   - **Outcome**: Spectrogram images representing audio signals, optimized for CNN input.



### 3. Model Selection and Training

- **Goal**: Train various models (SVM, Random Forest, CNN, ResNet) on extracted features to classify COVID status from audio data.
- **Outcome**: Trained models ready for evaluation.



### 4. Model Evaluation

- **Goal**: Assess model performance using metrics like accuracy, F1-score, and AUC-ROC.
- **Outcome**: Quantitative performance measures indicating model effectiveness.



### 5. Deployment

- **Goal**: Deploy the model for real-time COVID-19 detection through an API.
- **Outcome**: Accessible API that accepts audio files and returns COVID-19 detection results.



